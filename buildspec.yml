---
version: 0.2


phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo 'about to call dockerd'
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.9/2020-08-04/bin/linux/amd64/aws-iam-authenticator
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.31.2/2024-11-15/bin/linux/amd64/kubectl
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.31.2/2024-11-15/bin/linux/amd64/kubectl.sha256
      - sha256sum -c kubectl.sha256
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH  
      - python --version
      - echo 'export PATH=$PWD/:$PATH' >> $HOME/.bashrc
      - echo `kubectl version --short --client`
      - python -m pip install --upgrade --force pip
      - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add
      - wget -q -O - https://apt.corretto.aws/corretto.key | sudo apt-key add -
      - sudo apt-get update && sudo apt-get -y install jq
      - pip install --upgrade awscli pytest
  pre_build:
    commands:
      - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' simple_jwt_api.yml
      - sed -i 's@JWT_SECRET_VALUE@'"$JWT_SECRET"'@' simple_jwt_api.yml
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG=$HOME/.kube/config
      - echo `ls -l`
      - pip install -r requirements.txt
  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - echo $JWT_SECRET > .env
      # - kubectl apply -f simple-jwt-api.yml
      # - kubectl apply -f ci-cd-codepipeline.cfn.yml
      - kubectl apply -f simple_jwt_api.yml --validate=false
      - printf '[{"name":"simple_jwt_api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
      - pwd
      - ls
artifacts:
  files: build.json
env:
  parameter-store:         
    JWT_SECRET: JWT_SECRET
